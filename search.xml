<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据算法和数据结构模板]]></title>
    <url>%2Fposts%2Ff27f2308.html</url>
    <content type="text"><![CDATA[目录：一、数据算法1.高精容器（项目）：here in github 1.1 高精加法 1.2 高精减法 1.3 高精乘法 1.4 高精除法 2.排序3.搜索3.1 深搜（伪） 3.2 广搜（伪） 二、数据结构1.树容器（项目）：here in github 1.1 平衡树 1.1.1 splay 1.1 高精加法1234567891011121314151617181920212223242526272829303132#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; int a[1001],b[1001],c[1001],i; string a1,b1; cin&gt;&gt;a1&gt;&gt;b1;//读入 a[0]=a1.size(); b[0]=b1.size(); for(i=1;i&lt;=a[0];i++) &#123; a[i]=a1[a[0]-i]-'0'; &#125; for(i=1;i&lt;=b[0];i++) &#123; b[i]=b1[b[0]-i]-'0'; &#125; int x=0; c[0]=max(a[0],b[0]); for(i=1;i&lt;=c[0];i++) &#123; c[i]=a[i]+b[i]+x;//加法 x=c[i]/10;//进位 c[i]%=10; &#125; if(x!=0) c[++c[0]]=x;//进位 for(i=c[0];i&gt;=1;i--)//输出 &#123; cout&lt;&lt;c[i]; &#125; return 0;&#125; 1.2 高精减法1234567891011121314151617181920212223242526272829303132333435363738#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; int a[1001],b[1001],c[1001],i; string a1,b1; cin&gt;&gt;a1&gt;&gt;b1;//读入 if(a1&lt;b1)//负数 &#123; cout&lt;&lt;'-'; string t; t=a1; a1=b1; b1=t; &#125; a[0]=a1.size(); b[0]=b1.size(); for(i=1;i&lt;=a[0];i++) &#123; a[i]=a1[a[0]-i]-'0'; &#125; for(i=1;i&lt;=b[0];i++) &#123; b[i]=b1[b[0]-i]-'0'; &#125; c[0]=a[0]; for(i=1;i&lt;=a[0];i++) &#123; c[i]=a[i]-b[i];//减法 if(c[i]&lt;0) a[i+1]--,c[i]+=10;//退位 &#125; while(c[c[0]]==0&amp;&amp;c[0]&gt;1) c[0]--;//退位 for(i=c[0];i&gt;=1;i--)//输出 &#123; cout&lt;&lt;c[i]; &#125; return 0;&#125; 1.3 高精乘法12345678910111213141516171819202122232425262728293031323334353637#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; int a[1001],b[1001],c[1001],i,j; string a1,b1; cin&gt;&gt;a1&gt;&gt;b1;//读入 a[0]=a1.size(); b[0]=b1.size(); for(i=1;i&lt;=a[0];i++) &#123; a[i]=a1[a[0]-i]-'0'; &#125; for(i=1;i&lt;=b[0];i++) &#123; b[i]=b1[b[0]-i]-'0'; &#125; c[0]=a[0]+b[0]-1; int x; for(i=1;i&lt;=a[0];i++) &#123; x=0; for(j=1;j&lt;=b[0];j++) &#123; c[i+j-1]+=a[i]*b[j]+x;//乘法 x=c[i+j-1]/10;//进位 c[i+j-1]%=10; &#125; if(x) c[b[0]+i]=x;//进位 &#125; while(c[c[0]+1]!=0) c[0]++;//进位 for(i=c[0];i&gt;=1;i--)//输出 &#123; cout&lt;&lt;c[i]; &#125; return 0;&#125; 二 树 1.1.1 splay 已AC123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206#include&lt;cstdio&gt;struct tree&#123;//splay int f,cl,cr; int k,c,s;&#125;;struct tree t[100001];int root,size;void clear(int x)&#123; t[x].f=t[x].cl=t[x].cr=t[x].k=t[x].c=t[x].s=0;&#125;void update(int x)&#123; if(x) &#123; t[x].s=t[x].c; if(t[x].cl) t[x].s+=t[t[x].cl].s; if(t[x].cr) t[x].s+=t[t[x].cr].s; &#125;&#125;int get(int x)&#123; return t[t[x].f].cl==x?1:2;&#125;void rotate(int x)&#123; int old=t[x].f,oldf=t[old].f,which=get(x); if(which==1) &#123; t[old].cl=t[x].cr; t[x].f=oldf; t[t[x].cr].f=old; t[old].f=x; t[x].cr=old; if(oldf) &#123; if(t[oldf].cl==old) t[oldf].cl=x; else t[oldf].cr=x; &#125; &#125; else &#123; t[old].cr=t[x].cl; t[x].f=oldf; t[t[x].cl].f=old; t[old].f=x; t[x].cl=old; if(oldf) &#123; if(t[oldf].cl==old) t[oldf].cl=x; else t[oldf].cr=x; &#125; &#125; update(old);update(x);&#125;void splay(int x)&#123; for (int fa;fa=t[x].f;rotate(x)) if(t[fa].f) rotate((get(x)==get(fa))?fa:x); root=x;&#125;void insert(int x)&#123; if(!root) &#123; size++; t[size].cl=t[size].cr=0; t[size].f=0; t[size].k=x; t[size].s=t[size].c=1; root=size; return; &#125; int now=root,fa=0; while(1) &#123; if(x==t[now].k) &#123; t[now].c++; update(now); update(fa); splay(now); break; &#125; fa=now; now=x&lt;t[now].k?t[now].cl:t[now].cr; if(now==0) &#123; size++; t[size].cl=t[size].cr=0; t[size].f=fa; t[size].k=x; t[size].s=t[size].c=1; if(x&lt;t[fa].k) t[fa].cl=size; else t[fa].cr=size; update(fa); splay(size); break; &#125; &#125;&#125;int find(int x)&#123; int ans=0,now=root; while(1) &#123; if(x&lt;t[now].k) now=t[now].cl; else &#123; ans+=t[now].cl?t[t[now].cl].s:0; if(x==t[now].k) &#123; splay(now); return ans+1; &#125; ans+=t[now].c; now=t[now].cr; &#125; &#125;&#125;int findx(int x)&#123; int now=root; while(1) &#123; if(t[now].cl&amp;&amp;x&lt;=t[t[now].cl].s) now=t[now].cl; else &#123; int temp=(t[now].cl?t[t[now].cl].s:0)+t[now].c; if(x&lt;=temp) return t[now].k; x-=temp; now=t[now].cr; &#125; &#125;&#125;int pre()&#123; int now=t[root].cl; while(t[now].cr) now=t[now].cr; return now;&#125;int next()&#123; int now=t[root].cr; while(t[now].cl) now=t[now].cl; return now;&#125;void del(int x)&#123; int e=find(x); if(t[root].c&gt;1) &#123; t[root].c--; update(root); return; &#125; if(!t[root].cl&amp;&amp;!t[root].cr) &#123; clear(root); root=0; return; &#125; if(!t[root].cr) &#123; int oldroot=root; root=t[oldroot].cl; t[root].f=0; clear(oldroot); return; &#125; if(!t[root].cl) &#123; int oldroot=root; root=t[oldroot].cr; t[root].f=0; clear(oldroot); return; &#125; int leftbig=pre(),oldroot=root; splay(leftbig); t[t[oldroot].cr].f=root; t[root].cr=t[oldroot].cr; clear(oldroot); update(root);&#125;int main()&#123; int n,i; std::scanf("%d",&amp;n); for(i=1;i&lt;=n;i++) &#123; int opt,x; std::scanf("%d %d",&amp;opt,&amp;x); switch(opt) &#123; case 1:insert(x);break; case 2:del(x);break; case 3:std::printf("%d\n",find(x));break; case 4:std::printf("%d\n",findx(x));break; case 5:insert(x);std::printf("%d\n",t[pre()].k);del(x);break; case 6:insert(x);std::printf("%d\n",t[next()].k);del(x);break; &#125; &#125; return 0;&#125;]]></content>
      <categories>
        <category>模板</category>
      </categories>
      <tags>
        <tag>模板</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[终于搭建成功博客]]></title>
    <url>%2Fposts%2F13a0b35c.html</url>
    <content type="text"><![CDATA[在2019年3月29日，我，bluecloudi，骄傲地宣布：我成功搭建了自己的博客！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>前言</tag>
      </tags>
  </entry>
</search>
